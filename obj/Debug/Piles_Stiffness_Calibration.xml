<?xml version="1.0"?>
<doc>
<assembly>
<name>
Piles_Stiffness_Calibration
</name>
</assembly>
<members>
<member name="T:Piles_Stiffness_Calibration.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Piles_Stiffness_Calibration.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Piles_Stiffness_Calibration.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Piles_Stiffness_Calibration.My.Resources.Resources.PluginIcon">
<summary>
  Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
</summary>
</member>
<member name="T:Piles_Stiffness_Calibration.AudioManagerInterface">
 <summary>
 Interface AUDIOMANAGER
 
Interface that defines the methods that all the concrete classes of 
type AudioManager have to implement.
 
 </summary>
</member>
<member name="T:Piles_Stiffness_Calibration.Document">
 <summary>
 
 ENUMERATION DOCUMENT
 
 Enumeration made from a number of identification constants for different typologies of text document
 from which to extract text and data to be displayed in the UI of the application.
 Each Constant is then associated with a specific filepath to the corresponding document.
 The use of Enum constants allow to hide the filepaths to the user.
 
 </summary>
</member>
<member name="T:Piles_Stiffness_Calibration.Sound">
 <summary>
 
 ENUMERATION SOUND
 
 Enumeration made from a number of identification constants for different typologies of sound.
 Each Constant is then associated with a specific filepath to the corresponding audio file.
 The use of Enum constants allow to hide the filepaths to the user.
 
 </summary>
</member>
<member name="T:Piles_Stiffness_Calibration.SoundManager">
 <summary>
 SOUNDSMANAGER
 
 Concrete Class implementing the interface AudioManagerInterface and that is responsible 
 for playing the sound effects of the application, when active.
 
 Specific Techniques
  - SINGLETON Design Pattern
 </summary>
</member>
<member name="T:Piles_Stiffness_Calibration.PSC_Model">
 <summary>
 
 PSC_Model Concrete Class
 
 <remarks>
 <para> Concrete class and main class of the Model Package. </para>
 <para> The class contains all the main data and methods for the running of the application.
 The model is updated based on the actions of the user in the View via the MVC Design Pattern while the View
 is updated based on the changes of the Model via the OBSERVER Design Pattern. </para>
 
 <para> Desing Patterns: 
 - OBSERVER
 - MODEL-VIEW-CONTROLLER
 - SINGLETON </para>
 
 <para> Programming Techniques: 
 - STREAMS </para>
 
 </remarks>
 
 </summary>
</member>
<member name="T:Piles_Stiffness_Calibration.Observable">
 <summary>
 
 Interface OBSERVABLE
 
 Essential Interface of the Observer Pattern and that, once implemented in the Model,
 it allows it to notify all the registered observers As soon As a change occurs In
 its own state.
 
 </summary>
</member>
<member name="T:Piles_Stiffness_Calibration.Observer">
 <summary>
 
 Interface OBSERVER
 
 Essential functional interface of the Observer Pattern.
 Once implemented in the View, it allows it to update itself automatically when 
 whatever change comes about in the Model. 
 
 </summary>
</member>
</members>
</doc>
